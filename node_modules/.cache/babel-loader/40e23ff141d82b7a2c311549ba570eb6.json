{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport var createReplace = configure(function (api) {\n  var replace = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n      var options,\n          controller,\n          signal,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(options)\n              };\n              _context.next = 8;\n              return multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'config/replace', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              _context.next = 15;\n              return res.text();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function replace(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return replace;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/config/replace.js"],"names":["fromString","uint8ArrayFromString","multipartRequest","configure","toUrlSearchParams","abortSignal","createReplace","api","replace","config","options","controller","AbortController","signal","searchParams","JSON","stringify","headers","post","res","text"],"mappings":";;;AAAA,SAASA,UAAU,IAAIC,oBAAvB,QAAmD,yBAAnD;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,IAAMC,aAAa,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAC5C,MAAMC,OAAO;AAAA,wEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAeC,cAAAA,OAAf,2DAAyB,EAAzB;AACRC,cAAAA,UADQ,GACK,IAAIC,eAAJ,EADL;AAERC,cAAAA,MAFQ,GAECR,WAAW,CAACM,UAAU,CAACE,MAAZ,EAAoBH,OAAO,CAACG,MAA5B,CAFZ;AAAA,4BAGIN,GAHJ;AAAA;AAAA;AAIZM,gBAAAA,MAAM,EAANA,MAJY;AAKZC,gBAAAA,YAAY,EAAEV,iBAAiB,CAACM,OAAD;AALnB;AAAA;AAAA,qBAMHR,gBAAgB,CAAC,CAACD,oBAAoB,CAACc,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAD,CAArB,CAAD,EAAiDE,UAAjD,EAA6DD,OAAO,CAACO,OAArE,CANb;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAGQC,IAHR,mBAGa,gBAHb;;AAAA;AAGRC,cAAAA,GAHQ;AAAA;AAAA,qBAQRA,GAAG,CAACC,IAAJ,EARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPZ,OAAO;AAAA;AAAA;AAAA,KAAb;;AAUA,SAAOA,OAAP;AACD,CAZqC,CAA/B","sourcesContent":["import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createReplace = configure(api => {\n  const replace = async (config, options = {}) => {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n    });\n    await res.text();\n  };\n  return replace;\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Multiaddr } from 'multiaddr';\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nvar log = debug('ipfs-http-client:lib:error-handler');\nvar merge = mergeOpts.bind({\n  ignoreUndefined: true\n});\nvar DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nvar DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nvar DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\n\nvar normalizeOptions = function normalizeOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var url;\n  var opts = {};\n  var agent;\n\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    var protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    var host = (opts.host || DEFAULT_HOST).split(':')[0];\n    var port = opts.port || DEFAULT_PORT;\n    url = new URL(\"\".concat(protocol, \"://\").concat(host, \":\").concat(port));\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n\n  if (isNode) {\n    var Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n\n  return _objectSpread(_objectSpread({}, opts), {}, {\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url: url,\n    agent: agent\n  });\n};\n\nexport var errorHandler = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n    var msg, data, error;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(response.headers.get('Content-Type') || '').startsWith('application/json')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return response.json();\n\n          case 4:\n            data = _context.sent;\n            log(data);\n            msg = data.Message || data.message;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return response.text();\n\n          case 11:\n            msg = _context.sent;\n\n          case 12:\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            log('Failed to parse error response', _context.t0);\n            msg = _context.t0.message;\n\n          case 18:\n            error = new HTTP.HTTPError(response);\n\n            if (msg) {\n              if (msg.includes('deadline has elapsed')) {\n                error = new HTTP.TimeoutError();\n              }\n\n              if (msg && msg.includes('context deadline exceeded')) {\n                error = new HTTP.TimeoutError();\n              }\n            }\n\n            if (msg && msg.includes('request timed out')) {\n              error = new HTTP.TimeoutError();\n            }\n\n            if (msg) {\n              error.message = msg;\n            }\n\n            throw error;\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function errorHandler(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\n\nvar kebabCase = function kebabCase(str) {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\n\nvar parseTimeout = function parseTimeout(value) {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\n\nexport var Client = /*#__PURE__*/function (_HTTP) {\n  _inherits(Client, _HTTP);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Client);\n\n    var opts = normalizeOptions(options);\n    _this = _super.call(this, {\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: \"\".concat(opts.url),\n      handleError: errorHandler,\n      transformSearchParams: function transformSearchParams(search) {\n        var out = new URLSearchParams();\n\n        var _iterator = _createForOfIteratorHelper(search),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                key = _step$value[0],\n                value = _step$value[1];\n\n            if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n              out.append(kebabCase(key), value);\n            }\n\n            if (key === 'timeout' && !isNaN(value)) {\n              out.append(kebabCase(key), value);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete _this.get;\n    delete _this.put;\n    delete _this.delete;\n    delete _this.options;\n    var fetch = _this.fetch;\n\n    _this.fetch = function (resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = \"\".concat(opts.url, \"/\").concat(resource);\n      }\n\n      return fetch.call(_assertThisInitialized(_this), resource, merge(options, {\n        method: 'POST'\n      }));\n    };\n\n    return _this;\n  }\n\n  return _createClass(Client);\n}(HTTP);\nexport var HTTPError = HTTP.HTTPError;","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/lib/core.js"],"names":["Multiaddr","isBrowser","isWebWorker","isNode","parseDuration","debug","HTTP","mergeOpts","toUrlString","getAgent","log","merge","bind","ignoreUndefined","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","normalizeOptions","options","url","opts","agent","isMultiaddr","URL","replace","host","split","apiPath","pathname","undefined","Agent","keepAlive","maxSockets","Number","errorHandler","response","headers","get","startsWith","json","data","msg","Message","message","text","error","HTTPError","includes","TimeoutError","KEBAB_REGEX","kebabCase","str","match","toLowerCase","parseTimeout","value","Client","timeout","base","handleError","transformSearchParams","search","out","URLSearchParams","key","append","isNaN","put","delete","fetch","resource","call","method"],"mappings":"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","sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport {\n  isBrowser,\n  isWebWorker,\n  isNode\n} from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({ ignoreUndefined: true });\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = (options = {}) => {\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${ protocol }://${ host }:${ port }`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor(options = {}) {\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${ opts.url }`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${ opts.url }/${ resource }`;\n      }\n      return fetch.call(this, resource, merge(options, { method: 'POST' }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;"]},"metadata":{},"sourceType":"module"}
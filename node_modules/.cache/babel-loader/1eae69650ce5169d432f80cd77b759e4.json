{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"timeout\", \"signal\", \"headers\"];\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { encodeAddParams, decodePin } from './utils.js';\nexport function createAdd(client) {\n  function add(_x, _x2) {\n    return _add.apply(this, arguments);\n  }\n\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, _ref) {\n      var timeout, signal, headers, query, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, query = _objectWithoutProperties(_ref, _excluded);\n              _context.next = 3;\n              return client.post('pin/remote/add', {\n                timeout: timeout,\n                signal: signal,\n                headers: headers,\n                searchParams: encodeAddParams(_objectSpread({\n                  cid: cid\n                }, query))\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.t0 = decodePin;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n\n  return add;\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/pin/remote/add.js"],"names":["encodeAddParams","decodePin","createAdd","client","add","cid","timeout","signal","headers","query","post","searchParams","response","json"],"mappings":";;;;;AAAA,SACEA,eADF,EAEEC,SAFF,QAGO,YAHP;AAIA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAAA,WACjBC,GADiB;AAAA;AAAA;;AAAA;AAAA,oEAChC,iBAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBC,cAAAA,OAAzB,QAAyBA,OAAzB,EAAkCC,MAAlC,QAAkCA,MAAlC,EAA0CC,OAA1C,QAA0CA,OAA1C,EAAsDC,KAAtD;AAAA;AAAA,qBACyBN,MAAM,CAACO,IAAP,CAAY,gBAAZ,EAA8B;AACnDJ,gBAAAA,OAAO,EAAPA,OADmD;AAEnDC,gBAAAA,MAAM,EAANA,MAFmD;AAGnDC,gBAAAA,OAAO,EAAPA,OAHmD;AAInDG,gBAAAA,YAAY,EAAEX,eAAe;AAC3BK,kBAAAA,GAAG,EAAHA;AAD2B,mBAExBI,KAFwB;AAJsB,eAA9B,CADzB;;AAAA;AACQG,cAAAA,QADR;AAAA,4BAUSX,SAVT;AAAA;AAAA,qBAUyBW,QAAQ,CAACC,IAAT,EAVzB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADgC;AAAA;AAAA;;AAahC,SAAOT,GAAP;AACD","sourcesContent":["import {\n  encodeAddParams,\n  decodePin\n} from './utils.js';\nexport function createAdd(client) {\n  async function add(cid, {timeout, signal, headers, ...query}) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({\n        cid,\n        ...query\n      })\n    });\n    return decodePin(await response.json());\n  }\n  return add;\n}"]},"metadata":{},"sourceType":"module"}
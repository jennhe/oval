{"ast":null,"code":"import _classCallCheck from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as Digest from './digest.js';\nexport var from = function from(_ref) {\n  var name = _ref.name,\n      code = _ref.code,\n      encode = _ref.encode;\n  return new Hasher(name, code, encode);\n};\nexport var Hasher = /*#__PURE__*/function () {\n  function Hasher(name, code, encode) {\n    _classCallCheck(this, Hasher);\n\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n\n  _createClass(Hasher, [{\n    key: \"digest\",\n    value: function digest(input) {\n      var _this = this;\n\n      if (input instanceof Uint8Array) {\n        var result = this.encode(input);\n        return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(function (digest) {\n          return Digest.create(_this.code, digest);\n        });\n      } else {\n        throw Error('Unknown type, must be binary type');\n      }\n    }\n  }]);\n\n  return Hasher;\n}();","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/multiformats/esm/src/hashes/hasher.js"],"names":["Digest","from","name","code","encode","Hasher","input","Uint8Array","result","create","then","digest","Error"],"mappings":";;AAAA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,MAAQC,IAAR,QAAQA,IAAR;AAAA,MAAcC,MAAd,QAAcA,MAAd;AAAA,SAA0B,IAAIC,MAAJ,CAAWH,IAAX,EAAiBC,IAAjB,EAAuBC,MAAvB,CAA1B;AAAA,CAAb;AACP,WAAaC,MAAb;AACE,kBAAYH,IAAZ,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;AAAA;;AAC9B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AALH;AAAA;AAAA,WAME,gBAAOE,KAAP,EAAc;AAAA;;AACZ,UAAIA,KAAK,YAAYC,UAArB,EAAiC;AAC/B,YAAMC,MAAM,GAAG,KAAKJ,MAAL,CAAYE,KAAZ,CAAf;AACA,eAAOE,MAAM,YAAYD,UAAlB,GAA+BP,MAAM,CAACS,MAAP,CAAc,KAAKN,IAAnB,EAAyBK,MAAzB,CAA/B,GAAkEA,MAAM,CAACE,IAAP,CAAY,UAAAC,MAAM;AAAA,iBAAIX,MAAM,CAACS,MAAP,CAAc,KAAI,CAACN,IAAnB,EAAyBQ,MAAzB,CAAJ;AAAA,SAAlB,CAAzE;AACD,OAHD,MAGO;AACL,cAAMC,KAAK,CAAC,mCAAD,CAAX;AACD;AACF;AAbH;;AAAA;AAAA","sourcesContent":["import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}
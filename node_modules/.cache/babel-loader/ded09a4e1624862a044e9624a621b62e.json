{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport var createRmLink = configure(function (api) {\n  function rmLink(_x, _x2) {\n    return _rmLink.apply(this, arguments);\n  }\n\n  function _rmLink() {\n    _rmLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, dLink) {\n      var options,\n          res,\n          _yield$res$json,\n          Hash,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              _context.next = 3;\n              return api.post('object/patch/rm-link', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: [\"\".concat(cid), dLink.Name || dLink.name || null]\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Hash = _yield$res$json.Hash;\n              return _context.abrupt(\"return\", CID.parse(Hash));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _rmLink.apply(this, arguments);\n  }\n\n  return rmLink;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/object/patch/rm-link.js"],"names":["CID","configure","toUrlSearchParams","createRmLink","api","rmLink","cid","dLink","options","post","signal","searchParams","arg","Name","name","headers","res","json","Hash","parse"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,OAAO,IAAMC,YAAY,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WAC5BC,MAD4B;AAAA;AAAA;;AAAA;AAAA,uEAC3C,iBAAsBC,GAAtB,EAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkCC,cAAAA,OAAlC,2DAA4C,EAA5C;AAAA;AAAA,qBACoBJ,GAAG,CAACK,IAAJ,CAAS,sBAAT,EAAiC;AACjDC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADiC;AAEjDC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,EAAE,WACCN,GADD,GAEHC,KAAK,CAACM,IAAN,IAAcN,KAAK,CAACO,IAApB,IAA4B,IAFzB;AADwB,mBAK1BN,OAL0B,EAFkB;AASjDO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AATgC,eAAjC,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBAYuBA,GAAG,CAACC,IAAJ,EAZvB;;AAAA;AAAA;AAYSC,cAAAA,IAZT,mBAYSA,IAZT;AAAA,+CAaSlB,GAAG,CAACmB,KAAJ,CAAUD,IAAV,CAbT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2C;AAAA;AAAA;;AAgB3C,SAAOb,MAAP;AACD,CAjBoC,CAA9B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createRmLink = configure(api => {\n  async function rmLink(cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${ cid }`,\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return rmLink;\n});"]},"metadata":{},"sourceType":"module"}
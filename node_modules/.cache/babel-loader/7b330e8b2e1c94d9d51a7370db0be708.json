{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nexport var createAppendData = configure(function (api) {\n  function appendData(_x, _x2) {\n    return _appendData.apply(this, arguments);\n  }\n\n  function _appendData() {\n    _appendData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, data) {\n      var options,\n          controller,\n          signal,\n          res,\n          _yield$res$json,\n          Hash,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(cid)\n                }, options))\n              };\n              _context.next = 8;\n              return multipartRequest([data], controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'object/patch/append-data', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              _context.next = 15;\n              return res.json();\n\n            case 15:\n              _yield$res$json = _context.sent;\n              Hash = _yield$res$json.Hash;\n              return _context.abrupt(\"return\", CID.parse(Hash));\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _appendData.apply(this, arguments);\n  }\n\n  return appendData;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/object/patch/append-data.js"],"names":["CID","multipartRequest","configure","toUrlSearchParams","abortSignal","createAppendData","api","appendData","cid","data","options","controller","AbortController","signal","searchParams","arg","headers","post","res","json","Hash","parse"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAO,IAAMC,gBAAgB,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAAA,WAChCC,UADgC;AAAA;AAAA;;AAAA;AAAA,2EAC/C,iBAA0BC,GAA1B,EAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAqCC,cAAAA,OAArC,2DAA+C,EAA/C;AACQC,cAAAA,UADR,GACqB,IAAIC,eAAJ,EADrB;AAEQC,cAAAA,MAFR,GAEiBT,WAAW,CAACO,UAAU,CAACE,MAAZ,EAAoBH,OAAO,CAACG,MAA5B,CAF5B;AAAA,4BAGoBP,GAHpB;AAAA;AAAA;AAIIO,gBAAAA,MAAM,EAANA,MAJJ;AAKIC,gBAAAA,YAAY,EAAEX,iBAAiB;AAC7BY,kBAAAA,GAAG,YAAMP,GAAN;AAD0B,mBAE1BE,OAF0B;AALnC;AAAA;AAAA,qBASaT,gBAAgB,CAAC,CAACQ,IAAD,CAAD,EAASE,UAAT,EAAqBD,OAAO,CAACM,OAA7B,CAT7B;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAGwBC,IAHxB,mBAG6B,0BAH7B;;AAAA;AAGQC,cAAAA,GAHR;AAAA;AAAA,qBAWuBA,GAAG,CAACC,IAAJ,EAXvB;;AAAA;AAAA;AAWSC,cAAAA,IAXT,mBAWSA,IAXT;AAAA,+CAYSpB,GAAG,CAACqB,KAAJ,CAAUD,IAAV,CAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD+C;AAAA;AAAA;;AAe/C,SAAOb,UAAP;AACD,CAhBwC,CAAlC","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nexport const createAppendData = configure(api => {\n  async function appendData(cid, data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid }`,\n        ...options\n      }),\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return appendData;\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createVersion = configure(function (api) {\n  function version() {\n    return _version.apply(this, arguments);\n  }\n\n  function _version() {\n    _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('repo/version', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              _context.next = 5;\n              return _context.sent.json();\n\n            case 5:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.Version);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _version.apply(this, arguments);\n  }\n\n  return version;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/repo/version.js"],"names":["configure","toUrlSearchParams","createVersion","api","version","options","post","signal","searchParams","headers","json","res","Version"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,aAAa,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WAC7BC,OAD6B;AAAA;AAAA;;AAAA;AAAA,wEAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,cAAAA,OAAvB,2DAAiC,EAAjC;AAAA;AAAA,qBAC2BF,GAAG,CAACG,IAAJ,CAAS,cAAT,EAAyB;AAChDC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADgC;AAEhDC,gBAAAA,YAAY,EAAEP,iBAAiB,CAACI,OAAD,CAFiB;AAGhDI,gBAAAA,OAAO,EAAEJ,OAAO,CAACI;AAH+B,eAAzB,CAD3B;;AAAA;AAAA;AAAA,mCAKMC,IALN;;AAAA;AACQC,cAAAA,GADR;AAAA,+CAMSA,GAAG,CAACC,OANb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD4C;AAAA;AAAA;;AAS5C,SAAOR,OAAP;AACD,CAVqC,CAA/B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createVersion = configure(api => {\n  async function version(options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return res.Version;\n  }\n  return version;\n});"]},"metadata":{},"sourceType":"module"}
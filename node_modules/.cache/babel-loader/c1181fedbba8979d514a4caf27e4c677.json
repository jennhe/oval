{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { decodeRemoteService } from './utils.js';\nexport function createLs(client) {\n  function ls() {\n    return _ls.apply(this, arguments);\n  }\n\n  function _ls() {\n    _ls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          stat,\n          headers,\n          timeout,\n          signal,\n          response,\n          _yield$response$json,\n          RemoteServices,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              stat = options.stat, headers = options.headers, timeout = options.timeout, signal = options.signal;\n              _context.next = 4;\n              return client.post('pin/remote/service/ls', {\n                timeout: timeout,\n                signal: signal,\n                headers: headers,\n                searchParams: stat === true ? toUrlSearchParams({\n                  stat: stat\n                }) : undefined\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              _yield$response$json = _context.sent;\n              RemoteServices = _yield$response$json.RemoteServices;\n              return _context.abrupt(\"return\", RemoteServices.map(decodeRemoteService));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/pin/remote/service/ls.js"],"names":["toUrlSearchParams","decodeRemoteService","createLs","client","ls","options","stat","headers","timeout","signal","post","searchParams","undefined","response","json","RemoteServices","map"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,sCAAlC;AACA,SAASC,mBAAT,QAAoC,YAApC;AACA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAAA,WAChBC,EADgB;AAAA;AAAA;;AAAA;AAAA,mEAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkBC,cAAAA,OAAlB,2DAA4B,EAA5B;AACSC,cAAAA,IADT,GAC2CD,OAD3C,CACSC,IADT,EACeC,OADf,GAC2CF,OAD3C,CACeE,OADf,EACwBC,OADxB,GAC2CH,OAD3C,CACwBG,OADxB,EACiCC,MADjC,GAC2CJ,OAD3C,CACiCI,MADjC;AAAA;AAAA,qBAEyBN,MAAM,CAACO,IAAP,CAAY,uBAAZ,EAAqC;AAC1DF,gBAAAA,OAAO,EAAPA,OAD0D;AAE1DC,gBAAAA,MAAM,EAANA,MAF0D;AAG1DF,gBAAAA,OAAO,EAAPA,OAH0D;AAI1DI,gBAAAA,YAAY,EAAEL,IAAI,KAAK,IAAT,GAAgBN,iBAAiB,CAAC;AAAEM,kBAAAA,IAAI,EAAJA;AAAF,iBAAD,CAAjC,GAA8CM;AAJF,eAArC,CAFzB;;AAAA;AAEQC,cAAAA,QAFR;AAAA;AAAA,qBAQiCA,QAAQ,CAACC,IAAT,EARjC;;AAAA;AAAA;AAQSC,cAAAA,cART,wBAQSA,cART;AAAA,+CASSA,cAAc,CAACC,GAAf,CAAmBf,mBAAnB,CATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD+B;AAAA;AAAA;;AAY/B,SAAOG,EAAP;AACD","sourcesContent":["import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { decodeRemoteService } from './utils.js';\nexport function createLs(client) {\n  async function ls(options = {}) {\n    const {stat, headers, timeout, signal} = options;\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    });\n    const {RemoteServices} = await response.json();\n    return RemoteServices.map(decodeRemoteService);\n  }\n  return ls;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createLocalAddrs = configure(function (api) {\n  function localAddrs() {\n    return _localAddrs.apply(this, arguments);\n  }\n\n  function _localAddrs() {\n    _localAddrs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          res,\n          _yield$res$json,\n          Strings,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('swarm/addrs/local', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Strings = _yield$res$json.Strings;\n              return _context.abrupt(\"return\", (Strings || []).map(function (a) {\n                return new Multiaddr(a);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _localAddrs.apply(this, arguments);\n  }\n\n  return localAddrs;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/swarm/local-addrs.js"],"names":["Multiaddr","configure","toUrlSearchParams","createLocalAddrs","api","localAddrs","options","post","signal","searchParams","headers","res","json","Strings","map","a"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,gBAAgB,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WAChCC,UADgC;AAAA;AAAA;;AAAA;AAAA,2EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA0BC,cAAAA,OAA1B,2DAAoC,EAApC;AAAA;AAAA,qBACoBF,GAAG,CAACG,IAAJ,CAAS,mBAAT,EAA8B;AAC9CC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MAD8B;AAE9CC,gBAAAA,YAAY,EAAEP,iBAAiB,CAACI,OAAD,CAFe;AAG9CI,gBAAAA,OAAO,EAAEJ,OAAO,CAACI;AAH6B,eAA9B,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBAM0BA,GAAG,CAACC,IAAJ,EAN1B;;AAAA;AAAA;AAMSC,cAAAA,OANT,mBAMSA,OANT;AAAA,+CAOS,CAACA,OAAO,IAAI,EAAZ,EAAgBC,GAAhB,CAAoB,UAAAC,CAAC;AAAA,uBAAI,IAAIf,SAAJ,CAAce,CAAd,CAAJ;AAAA,eAArB,CAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD+C;AAAA;AAAA;;AAU/C,SAAOV,UAAP;AACD,CAXwC,CAAlC","sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport var createMount = configure(function (api) {\n  function mount() {\n    return _mount.apply(this, arguments);\n  }\n\n  function _mount() {\n    _mount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('dns', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.t0 = objectToCamel;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _mount.apply(this, arguments);\n  }\n\n  return mount;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/mount.js"],"names":["objectToCamel","configure","toUrlSearchParams","createMount","api","mount","options","post","signal","searchParams","headers","res","json"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAO,IAAMC,WAAW,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WAC3BC,KAD2B;AAAA;AAAA;;AAAA;AAAA,sEAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBC,cAAAA,OAArB,2DAA+B,EAA/B;AAAA;AAAA,qBACoBF,GAAG,CAACG,IAAJ,CAAS,KAAT,EAAgB;AAChCC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADgB;AAEhCC,gBAAAA,YAAY,EAAEP,iBAAiB,CAACI,OAAD,CAFC;AAGhCI,gBAAAA,OAAO,EAAEJ,OAAO,CAACI;AAHe,eAAhB,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA,4BAMSX,aANT;AAAA;AAAA,qBAM6BW,GAAG,CAACC,IAAJ,EAN7B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0C;AAAA;AAAA;;AAS1C,SAAOP,KAAP;AACD,CAVmC,CAA7B","sourcesContent":["import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createMount = configure(api => {\n  async function mount(options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return mount;\n});"]},"metadata":{},"sourceType":"module"}
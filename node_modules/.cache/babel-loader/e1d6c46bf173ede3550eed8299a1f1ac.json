{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { resolve } from '../lib/resolve.js';\nimport first from 'it-first';\nimport last from 'it-last';\nimport errCode from 'err-code';\nimport { createGet as createBlockGet } from '../block/get.js';\nexport var createGet = function createGet(codecs, options) {\n  var fn = configure(function (api, opts) {\n    var getBlock = createBlockGet(opts);\n\n    var get = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n        var options,\n            entry,\n            result,\n            codec,\n            block,\n            node,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n                if (!options.path) {\n                  _context.next = 16;\n                  break;\n                }\n\n                if (!options.localResolve) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return first(resolve(cid, options.path, codecs, getBlock, options));\n\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return last(resolve(cid, options.path, codecs, getBlock, options));\n\n              case 10:\n                _context.t0 = _context.sent;\n\n              case 11:\n                entry = _context.t0;\n                result = entry;\n\n                if (result) {\n                  _context.next = 15;\n                  break;\n                }\n\n                throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n\n              case 15:\n                return _context.abrupt(\"return\", result);\n\n              case 16:\n                _context.next = 18;\n                return codecs.getCodec(cid.code);\n\n              case 18:\n                codec = _context.sent;\n                _context.next = 21;\n                return getBlock(cid, options);\n\n              case 21:\n                block = _context.sent;\n                node = codec.decode(block);\n                return _context.abrupt(\"return\", {\n                  value: node,\n                  remainderPath: ''\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function get(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return get;\n  });\n  return fn(options);\n};","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/dag/get.js"],"names":["configure","resolve","first","last","errCode","createGet","createBlockGet","codecs","options","fn","api","opts","getBlock","get","cid","path","localResolve","entry","result","Error","getCodec","code","codec","block","node","decode","value","remainderPath"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,SAAS,IAAIC,cAAtB,QAA4C,iBAA5C;AACA,OAAO,IAAMD,SAAS,GAAG,SAAZA,SAAY,CAACE,MAAD,EAASC,OAAT,EAAqB;AAC5C,MAAMC,EAAE,GAAGT,SAAS,CAAC,UAACU,GAAD,EAAMC,IAAN,EAAe;AAClC,QAAMC,QAAQ,GAAGN,cAAc,CAACK,IAAD,CAA/B;;AACA,QAAME,GAAG;AAAA,0EAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYN,gBAAAA,OAAZ,2DAAsB,EAAtB;;AAAA,qBACNA,OAAO,CAACO,IADF;AAAA;AAAA;AAAA;;AAAA,qBAEMP,OAAO,CAACQ,YAFd;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEmCd,KAAK,CAACD,OAAO,CAACa,GAAD,EAAMN,OAAO,CAACO,IAAd,EAAoBR,MAApB,EAA4BK,QAA5B,EAAsCJ,OAAtC,CAAR,CAFxC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAEwGL,IAAI,CAACF,OAAO,CAACa,GAAD,EAAMN,OAAO,CAACO,IAAd,EAAoBR,MAApB,EAA4BK,QAA5B,EAAsCJ,OAAtC,CAAR,CAF5G;;AAAA;AAAA;;AAAA;AAEFS,gBAAAA,KAFE;AAGFC,gBAAAA,MAHE,GAGOD,KAHP;;AAAA,oBAIHC,MAJG;AAAA;AAAA;AAAA;;AAAA,sBAKAd,OAAO,CAAC,IAAIe,KAAJ,CAAU,WAAV,CAAD,EAAyB,eAAzB,CALP;;AAAA;AAAA,iDAODD,MAPC;;AAAA;AAAA;AAAA,uBASUX,MAAM,CAACa,QAAP,CAAgBN,GAAG,CAACO,IAApB,CATV;;AAAA;AASJC,gBAAAA,KATI;AAAA;AAAA,uBAUUV,QAAQ,CAACE,GAAD,EAAMN,OAAN,CAVlB;;AAAA;AAUJe,gBAAAA,KAVI;AAWJC,gBAAAA,IAXI,GAWGF,KAAK,CAACG,MAAN,CAAaF,KAAb,CAXH;AAAA,iDAYH;AACLG,kBAAAA,KAAK,EAAEF,IADF;AAELG,kBAAAA,aAAa,EAAE;AAFV,iBAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAHd,GAAG;AAAA;AAAA;AAAA,OAAT;;AAiBA,WAAOA,GAAP;AACD,GApBmB,CAApB;AAqBA,SAAOJ,EAAE,CAACD,OAAD,CAAT;AACD,CAvBM","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { resolve } from '../lib/resolve.js';\nimport first from 'it-first';\nimport last from 'it-last';\nimport errCode from 'err-code';\nimport { createGet as createBlockGet } from '../block/get.js';\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts);\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve ? await first(resolve(cid, options.path, codecs, getBlock, options)) : await last(resolve(cid, options.path, codecs, getBlock, options));\n        const result = entry;\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n        }\n        return result;\n      }\n      const codec = await codecs.getCodec(cid.code);\n      const block = await getBlock(cid, options);\n      const node = codec.decode(block);\n      return {\n        value: node,\n        remainderPath: ''\n      };\n    };\n    return get;\n  });\n  return fn(options);\n};"]},"metadata":{},"sourceType":"module"}
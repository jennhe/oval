{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { encodeEndpoint } from './utils.js';\nexport function createAdd(client) {\n  function add(_x, _x2) {\n    return _add.apply(this, arguments);\n  }\n\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, options) {\n      var endpoint, key, headers, timeout, signal;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              endpoint = options.endpoint, key = options.key, headers = options.headers, timeout = options.timeout, signal = options.signal;\n              _context.next = 3;\n              return client.post('pin/remote/service/add', {\n                timeout: timeout,\n                signal: signal,\n                searchParams: toUrlSearchParams({\n                  arg: [name, encodeEndpoint(endpoint), key]\n                }),\n                headers: headers\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n\n  return add;\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/pin/remote/service/add.js"],"names":["toUrlSearchParams","encodeEndpoint","createAdd","client","add","name","options","endpoint","key","headers","timeout","signal","post","searchParams","arg"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,sCAAlC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAAA,WACjBC,GADiB;AAAA;AAAA;;AAAA;AAAA,oEAChC,iBAAmBC,IAAnB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACSC,cAAAA,QADT,GACoDD,OADpD,CACSC,QADT,EACmBC,GADnB,GACoDF,OADpD,CACmBE,GADnB,EACwBC,OADxB,GACoDH,OADpD,CACwBG,OADxB,EACiCC,OADjC,GACoDJ,OADpD,CACiCI,OADjC,EAC0CC,MAD1C,GACoDL,OADpD,CAC0CK,MAD1C;AAAA;AAAA,qBAEQR,MAAM,CAACS,IAAP,CAAY,wBAAZ,EAAsC;AAC1CF,gBAAAA,OAAO,EAAPA,OAD0C;AAE1CC,gBAAAA,MAAM,EAANA,MAF0C;AAG1CE,gBAAAA,YAAY,EAAEb,iBAAiB,CAAC;AAC9Bc,kBAAAA,GAAG,EAAE,CACHT,IADG,EAEHJ,cAAc,CAACM,QAAD,CAFX,EAGHC,GAHG;AADyB,iBAAD,CAHW;AAU1CC,gBAAAA,OAAO,EAAPA;AAV0C,eAAtC,CAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADgC;AAAA;AAAA;;AAgBhC,SAAOL,GAAP;AACD","sourcesContent":["import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { encodeEndpoint } from './utils.js';\nexport function createAdd(client) {\n  async function add(name, options) {\n    const {endpoint, key, headers, timeout, signal} = options;\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          name,\n          encodeEndpoint(endpoint),\n          key\n        ]\n      }),\n      headers\n    });\n  }\n  return add;\n}"]},"metadata":{},"sourceType":"module"}
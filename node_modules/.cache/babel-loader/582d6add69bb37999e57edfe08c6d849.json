{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createGet = configure(function (api) {\n  var get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (key) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('key argument is required');\n\n            case 3:\n              _context.next = 5;\n              return api.post('config', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Value);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return get;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/config/get.js"],"names":["configure","toUrlSearchParams","createGet","api","get","key","options","Error","post","signal","searchParams","arg","headers","res","json","data","Value"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AACxC,MAAMC,GAAG;AAAA,wEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYC,cAAAA,OAAZ,2DAAsB,EAAtB;;AAAA,kBACLD,GADK;AAAA;AAAA;AAAA;;AAAA,oBAEF,IAAIE,KAAJ,CAAU,0BAAV,CAFE;;AAAA;AAAA;AAAA,qBAIQJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;AACnCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MADmB;AAEnCC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,EAAEN;AADwB,mBAE1BC,OAF0B,EAFI;AAMnCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AANkB,eAAnB,CAJR;;AAAA;AAIJC,cAAAA,GAJI;AAAA;AAAA,qBAYSA,GAAG,CAACC,IAAJ,EAZT;;AAAA;AAYJC,cAAAA,IAZI;AAAA,+CAaHA,IAAI,CAACC,KAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAHZ,GAAG;AAAA;AAAA;AAAA,KAAT;;AAeA,SAAOA,GAAP;AACD,CAjBiC,CAA3B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required');\n    }\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Value;\n  };\n  return get;\n});"]},"metadata":{},"sourceType":"module"}
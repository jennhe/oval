{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createUnwant = configure(function (api) {\n  function unwant(_x) {\n    return _unwant.apply(this, arguments);\n  }\n\n  function _unwant() {\n    _unwant = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('bitswap/unwant', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.toString()\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.json());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _unwant.apply(this, arguments);\n  }\n\n  return unwant;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/bitswap/unwant.js"],"names":["configure","toUrlSearchParams","createUnwant","api","unwant","cid","options","post","signal","searchParams","arg","toString","headers","res","json"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,YAAY,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WAC5BC,MAD4B;AAAA;AAAA;;AAAA;AAAA,uEAC3C,iBAAsBC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BC,cAAAA,OAA3B,2DAAqC,EAArC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,gBAAT,EAA2B;AAC3CC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MAD2B;AAE3CC,gBAAAA,YAAY,EAAER,iBAAiB;AAC7BS,kBAAAA,GAAG,EAAEL,GAAG,CAACM,QAAJ;AADwB,mBAE1BL,OAF0B,EAFY;AAM3CM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AAN0B,eAA3B,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA,+CASSA,GAAG,CAACC,IAAJ,EATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2C;AAAA;AAAA;;AAY3C,SAAOV,MAAP;AACD,CAboC,CAA9B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createUnwant = configure(api => {\n  async function unwant(cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return unwant;\n});"]},"metadata":{},"sourceType":"module"}
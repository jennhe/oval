{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce(function (acc, curr) {\n      return acc + curr.length;\n    }, 0);\n  }\n\n  var output = new Uint8Array(length);\n  var offset = 0;\n\n  var _iterator = _createForOfIteratorHelper(arrays),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var arr = _step.value;\n      output.set(arr, offset);\n      offset += arr.length;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return output;\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/uint8arrays/esm/src/concat.js"],"names":["concat","arrays","length","reduce","acc","curr","output","Uint8Array","offset","arr","set"],"mappings":";AAAA,OAAO,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AACrC,MAAI,CAACA,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAc,UAACC,GAAD,EAAMC,IAAN;AAAA,aAAeD,GAAG,GAAGC,IAAI,CAACH,MAA1B;AAAA,KAAd,EAAgD,CAAhD,CAAT;AACD;;AACD,MAAMI,MAAM,GAAG,IAAIC,UAAJ,CAAeL,MAAf,CAAf;AACA,MAAIM,MAAM,GAAG,CAAb;;AALqC,6CAMnBP,MANmB;AAAA;;AAAA;AAMrC,wDAA0B;AAAA,UAAfQ,GAAe;AACxBH,MAAAA,MAAM,CAACI,GAAP,CAAWD,GAAX,EAAgBD,MAAhB;AACAA,MAAAA,MAAM,IAAIC,GAAG,CAACP,MAAd;AACD;AAToC;AAAA;AAAA;AAAA;AAAA;;AAUrC,SAAOI,MAAP;AACD","sourcesContent":["export function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createRm = configure(function (api) {\n  function rm(_x) {\n    return _rm.apply(this, arguments);\n  }\n\n  function _rm() {\n    _rm = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          removed,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (!Array.isArray(cid)) {\n                cid = [cid];\n              }\n\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('block/rm', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.map(function (cid) {\n                    return cid.toString();\n                  }),\n                  'stream-channels': true\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 4:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 7;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 9:\n              _context.next = 11;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 11:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 18;\n                break;\n              }\n\n              removed = _step.value;\n              _context.next = 15;\n              return toCoreInterface(removed);\n\n            case 15:\n              _iteratorAbruptCompletion = false;\n              _context.next = 9;\n              break;\n\n            case 18:\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 24:\n              _context.prev = 24;\n              _context.prev = 25;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 29;\n                break;\n              }\n\n              _context.next = 29;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 29:\n              _context.prev = 29;\n\n              if (!_didIteratorError) {\n                _context.next = 32;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 32:\n              return _context.finish(29);\n\n            case 33:\n              return _context.finish(24);\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 20, 24, 34], [25,, 29, 33]]);\n    }));\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n});\n\nfunction toCoreInterface(removed) {\n  var out = {\n    cid: CID.parse(removed.Hash)\n  };\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n\n  return out;\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/block/rm.js"],"names":["CID","configure","toUrlSearchParams","createRm","api","rm","cid","options","Array","isArray","post","signal","searchParams","arg","map","toString","headers","res","ndjson","removed","toCoreInterface","out","parse","Hash","Error","error"],"mappings":";;;;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,QAAQ,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WACvBC,EADuB;AAAA;AAAA;;AAAA;AAAA,qEACvC,iBAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,OAAxB,2DAAkC,EAAlC;;AACE,kBAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAL,EAAyB;AACvBA,gBAAAA,GAAG,GAAG,CAACA,GAAD,CAAN;AACD;;AAHH;AAAA,0CAIoBF,GAAG,CAACM,IAAJ,CAAS,UAAT,EAAqB;AACrCC,gBAAAA,MAAM,EAAEJ,OAAO,CAACI,MADqB;AAErCC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAEP,GAAG,CAACQ,GAAJ,CAAQ,UAAAR,GAAG;AAAA,2BAAIA,GAAG,CAACS,QAAJ,EAAJ;AAAA,mBAAX,CADwB;AAE7B,qCAAmB;AAFU,mBAG1BR,OAH0B,EAFM;AAOrCS,gBAAAA,OAAO,EAAET,OAAO,CAACS;AAPoB,eAArB,CAJpB;;AAAA;AAIQC,cAAAA,GAJR;AAAA;AAAA;AAAA;AAAA,yCAa8BA,GAAG,CAACC,MAAJ,EAb9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAamBC,cAAAA,OAbnB;AAAA;AAcI,qBAAMC,eAAe,CAACD,OAAD,CAArB;;AAdJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADuC;AAAA;AAAA;;AAkBvC,SAAOd,EAAP;AACD,CAnBgC,CAA1B;;AAoBP,SAASe,eAAT,CAAyBD,OAAzB,EAAkC;AAChC,MAAME,GAAG,GAAG;AAAEf,IAAAA,GAAG,EAAEN,GAAG,CAACsB,KAAJ,CAAUH,OAAO,CAACI,IAAlB;AAAP,GAAZ;;AACA,MAAIJ,OAAO,CAACK,KAAZ,EAAmB;AACjBH,IAAAA,GAAG,CAACI,KAAJ,GAAY,IAAID,KAAJ,CAAUL,OAAO,CAACK,KAAlB,CAAZ;AACD;;AACD,SAAOH,GAAP;AACD","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRm = configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = { cid: CID.parse(removed.Hash) };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}"]},"metadata":{},"sourceType":"module"}
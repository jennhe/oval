{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createData = configure(function (api) {\n  function data(_x) {\n    return _data.apply(this, arguments);\n  }\n\n  function _data() {\n    _data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('object/data', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(cid instanceof Uint8Array ? CID.decode(cid) : cid)\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.arrayBuffer();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", new Uint8Array(data, 0, data.byteLength));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _data.apply(this, arguments);\n  }\n\n  return data;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/object/data.js"],"names":["CID","configure","toUrlSearchParams","createData","api","data","cid","options","post","signal","searchParams","arg","Uint8Array","decode","headers","res","arrayBuffer","byteLength"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,UAAU,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WAC1BC,IAD0B;AAAA;AAAA;;AAAA;AAAA,qEACzC,iBAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBC,cAAAA,OAAzB,2DAAmC,EAAnC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;AACxCC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADwB;AAExCC,gBAAAA,YAAY,EAAER,iBAAiB;AAC7BS,kBAAAA,GAAG,YAAML,GAAG,YAAYM,UAAf,GAA4BZ,GAAG,CAACa,MAAJ,CAAWP,GAAX,CAA5B,GAA8CA,GAApD;AAD0B,mBAE1BC,OAF0B,EAFS;AAMxCO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AANuB,eAAxB,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBASqBA,GAAG,CAACC,WAAJ,EATrB;;AAAA;AASQX,cAAAA,IATR;AAAA,+CAUS,IAAIO,UAAJ,CAAeP,IAAf,EAAqB,CAArB,EAAwBA,IAAI,CAACY,UAA7B,CAVT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADyC;AAAA;AAAA;;AAazC,SAAOZ,IAAP;AACD,CAdkC,CAA5B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createData = configure(api => {\n  async function data(cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.arrayBuffer();\n    return new Uint8Array(data, 0, data.byteLength);\n  }\n  return data;\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { createStat } from './files/stat.js';\nexport var createLs = configure(function (api, opts) {\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n\n  function _ls() {\n    _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path) {\n      var options,\n          pathStr,\n          mapLink,\n          _mapLink,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          result,\n          links,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _mapLink = function _mapLink3() {\n                _mapLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(link) {\n                  var hash, ipfsPath, stats, entry;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          hash = link.Hash;\n\n                          if (!hash.includes('/')) {\n                            _context.next = 9;\n                            break;\n                          }\n\n                          ipfsPath = hash.startsWith('/ipfs/') ? hash : \"/ipfs/\".concat(hash);\n                          _context.next = 5;\n                          return createStat(opts)(ipfsPath);\n\n                        case 5:\n                          stats = _context.sent;\n                          hash = stats.cid;\n                          _context.next = 10;\n                          break;\n\n                        case 9:\n                          hash = CID.parse(hash);\n\n                        case 10:\n                          entry = {\n                            name: link.Name,\n                            path: pathStr + (link.Name ? \"/\".concat(link.Name) : ''),\n                            size: link.Size,\n                            cid: hash,\n                            type: typeOf(link)\n                          };\n\n                          if (link.Mode) {\n                            entry.mode = parseInt(link.Mode, 8);\n                          }\n\n                          if (link.Mtime !== undefined && link.Mtime !== null) {\n                            entry.mtime = {\n                              secs: link.Mtime\n                            };\n\n                            if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n                              entry.mtime.nsecs = link.MtimeNsecs;\n                            }\n                          }\n\n                          return _context.abrupt(\"return\", entry);\n\n                        case 14:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return _mapLink.apply(this, arguments);\n              };\n\n              mapLink = function _mapLink2(_x2) {\n                return _mapLink.apply(this, arguments);\n              };\n\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              pathStr = \"\".concat(path instanceof Uint8Array ? CID.decode(path) : path);\n              _context2.next = 6;\n              return _awaitAsyncGenerator(api.post('ls', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: pathStr\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 6:\n              res = _context2.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context2.prev = 9;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 11:\n              _context2.next = 13;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 13:\n              if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                _context2.next = 32;\n                break;\n              }\n\n              result = _step.value;\n              result = result.Objects;\n\n              if (result) {\n                _context2.next = 18;\n                break;\n              }\n\n              throw new Error('expected .Objects in results');\n\n            case 18:\n              result = result[0];\n\n              if (result) {\n                _context2.next = 21;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects');\n\n            case 21:\n              links = result.Links;\n\n              if (Array.isArray(links)) {\n                _context2.next = 24;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects[0].Links');\n\n            case 24:\n              if (links.length) {\n                _context2.next = 28;\n                break;\n              }\n\n              _context2.next = 27;\n              return mapLink(result);\n\n            case 27:\n              return _context2.abrupt(\"return\");\n\n            case 28:\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(links.map(mapLink)), _awaitAsyncGenerator), \"t0\", 29);\n\n            case 29:\n              _iteratorAbruptCompletion = false;\n              _context2.next = 11;\n              break;\n\n            case 32:\n              _context2.next = 38;\n              break;\n\n            case 34:\n              _context2.prev = 34;\n              _context2.t1 = _context2[\"catch\"](9);\n              _didIteratorError = true;\n              _iteratorError = _context2.t1;\n\n            case 38:\n              _context2.prev = 38;\n              _context2.prev = 39;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context2.next = 43;\n                break;\n              }\n\n              _context2.next = 43;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 43:\n              _context2.prev = 43;\n\n              if (!_didIteratorError) {\n                _context2.next = 46;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 46:\n              return _context2.finish(43);\n\n            case 47:\n              return _context2.finish(38);\n\n            case 48:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[9, 34, 38, 48], [39,, 43, 47]]);\n    }));\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'file';\n  }\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/ls.js"],"names":["CID","configure","toUrlSearchParams","createStat","createLs","api","opts","ls","path","mapLink","link","hash","Hash","includes","ipfsPath","startsWith","stats","cid","parse","entry","name","Name","pathStr","size","Size","type","typeOf","Mode","mode","parseInt","Mtime","undefined","mtime","secs","MtimeNsecs","nsecs","options","Uint8Array","decode","post","signal","searchParams","arg","headers","res","ndjson","result","Objects","Error","links","Links","Array","isArray","length","map","Type"],"mappings":"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","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { createStat } from './files/stat.js';\nexport const createLs = configure((api, opts) => {\n  async function* ls(path, options = {}) {\n    const pathStr = `${ path instanceof Uint8Array ? CID.decode(path) : path }`;\n    async function mapLink(link) {\n      let hash = link.Hash;\n      if (hash.includes('/')) {\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${ hash }`;\n        const stats = await createStat(opts)(ipfsPath);\n        hash = stats.cid;\n      } else {\n        hash = CID.parse(hash);\n      }\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${ link.Name }` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      };\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8);\n      }\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = { secs: link.Mtime };\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs;\n        }\n      }\n      return entry;\n    }\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n      result = result[0];\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n      const links = result.Links;\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n      if (!links.length) {\n        yield mapLink(result);\n        return;\n      }\n      yield* links.map(mapLink);\n    }\n  }\n  return ls;\n});\nfunction typeOf(link) {\n  switch (link.Type) {\n  case 1:\n  case 5:\n    return 'dir';\n  case 2:\n    return 'file';\n  default:\n    return 'file';\n  }\n}"]},"metadata":{},"sourceType":"module"}
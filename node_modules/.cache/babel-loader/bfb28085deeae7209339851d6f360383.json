{"ast":null,"code":"import _toConsumableArray from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { decode as _decode } from '../decode.js';\nimport { Token, Type } from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\n\nvar Tokenizer = /*#__PURE__*/function () {\n  function Tokenizer(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Tokenizer);\n\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n\n  _createClass(Tokenizer, [{\n    key: \"done\",\n    value: function done() {\n      return this.pos >= this.data.length;\n    }\n  }, {\n    key: \"ch\",\n    value: function ch() {\n      return this.data[this.pos];\n    }\n  }, {\n    key: \"currentMode\",\n    value: function currentMode() {\n      return this.modeStack[this.modeStack.length - 1];\n    }\n  }, {\n    key: \"skipWhitespace\",\n    value: function skipWhitespace() {\n      var c = this.ch();\n\n      while (c === 32 || c === 9 || c === 13 || c === 10) {\n        c = this.data[++this.pos];\n      }\n    }\n  }, {\n    key: \"expect\",\n    value: function expect(str) {\n      if (this.data.length - this.pos < str.length) {\n        throw new Error(\"\".concat(decodeErrPrefix, \" unexpected end of input at position \").concat(this.pos));\n      }\n\n      for (var i = 0; i < str.length; i++) {\n        if (this.data[this.pos++] !== str[i]) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected token at position \").concat(this.pos, \", expected to find '\").concat(String.fromCharCode.apply(String, _toConsumableArray(str)), \"'\"));\n        }\n      }\n    }\n  }, {\n    key: \"parseNumber\",\n    value: function parseNumber() {\n      var _this = this;\n\n      var startPos = this.pos;\n      var negative = false;\n      var float = false;\n\n      var swallow = function swallow(chars) {\n        while (!_this.done()) {\n          var ch = _this.ch();\n\n          if (chars.includes(ch)) {\n            _this.pos++;\n          } else {\n            break;\n          }\n        }\n      };\n\n      if (this.ch() === 45) {\n        negative = true;\n        this.pos++;\n      }\n\n      if (this.ch() === 48) {\n        this.pos++;\n\n        if (this.ch() === 46) {\n          this.pos++;\n          float = true;\n        } else {\n          return new Token(Type.uint, 0, this.pos - startPos);\n        }\n      }\n\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n\n      if (negative && this.pos === startPos + 1) {\n        throw new Error(\"\".concat(decodeErrPrefix, \" unexpected token at position \").concat(this.pos));\n      }\n\n      if (!this.done() && this.ch() === 46) {\n        if (float) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected token at position \").concat(this.pos));\n        }\n\n        float = true;\n        this.pos++;\n        swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n      }\n\n      if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n        float = true;\n        this.pos++;\n\n        if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n          this.pos++;\n        }\n\n        swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n      }\n\n      var numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n      var num = parseFloat(numStr);\n\n      if (float) {\n        return new Token(Type.float, num, this.pos - startPos);\n      }\n\n      if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n        return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n      }\n\n      return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n    }\n  }, {\n    key: \"parseString\",\n    value: function parseString() {\n      var _this2 = this;\n\n      if (this.ch() !== 34) {\n        throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \"; this shouldn't happen\"));\n      }\n\n      this.pos++;\n\n      for (var i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n        var ch = this.data[i];\n\n        if (ch === 92 || ch < 32 || ch >= 128) {\n          break;\n        }\n\n        if (ch === 34) {\n          var str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n          this.pos = i + 1;\n          return new Token(Type.string, str, l);\n        }\n      }\n\n      var startPos = this.pos;\n      var chars = [];\n\n      var readu4 = function readu4() {\n        if (_this2.pos + 4 >= _this2.data.length) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected end of unicode escape sequence at position \").concat(_this2.pos));\n        }\n\n        var u4 = 0;\n\n        for (var _i = 0; _i < 4; _i++) {\n          var _ch = _this2.ch();\n\n          if (_ch >= 48 && _ch <= 57) {\n            _ch -= 48;\n          } else if (_ch >= 97 && _ch <= 102) {\n            _ch = _ch - 97 + 10;\n          } else if (_ch >= 65 && _ch <= 70) {\n            _ch = _ch - 65 + 10;\n          } else {\n            throw new Error(\"\".concat(decodeErrPrefix, \" unexpected unicode escape character at position \").concat(_this2.pos));\n          }\n\n          u4 = u4 * 16 + _ch;\n          _this2.pos++;\n        }\n\n        return u4;\n      };\n\n      var readUtf8Char = function readUtf8Char() {\n        var firstByte = _this2.ch();\n\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n\n        if (_this2.pos + bytesPerSequence > _this2.data.length) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected unicode sequence at position \").concat(_this2.pos));\n        }\n\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 128) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = _this2.data[_this2.pos + 1];\n\n            if ((secondByte & 192) === 128) {\n              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n\n              if (tempCodePoint > 127) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = _this2.data[_this2.pos + 1];\n            thirdByte = _this2.data[_this2.pos + 2];\n\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n\n              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = _this2.data[_this2.pos + 1];\n            thirdByte = _this2.data[_this2.pos + 2];\n            fourthByte = _this2.data[_this2.pos + 3];\n\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n\n              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n\n        if (codePoint === null) {\n          codePoint = 65533;\n          bytesPerSequence = 1;\n        } else if (codePoint > 65535) {\n          codePoint -= 65536;\n          chars.push(codePoint >>> 10 & 1023 | 55296);\n          codePoint = 56320 | codePoint & 1023;\n        }\n\n        chars.push(codePoint);\n        _this2.pos += bytesPerSequence;\n      };\n\n      while (!this.done()) {\n        var _ch2 = this.ch();\n\n        var ch1 = void 0;\n\n        switch (_ch2) {\n          case 92:\n            this.pos++;\n\n            if (this.done()) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" unexpected string termination at position \").concat(this.pos));\n            }\n\n            ch1 = this.ch();\n            this.pos++;\n\n            switch (ch1) {\n              case 34:\n              case 39:\n              case 92:\n              case 47:\n                chars.push(ch1);\n                break;\n\n              case 98:\n                chars.push(8);\n                break;\n\n              case 116:\n                chars.push(9);\n                break;\n\n              case 110:\n                chars.push(10);\n                break;\n\n              case 102:\n                chars.push(12);\n                break;\n\n              case 114:\n                chars.push(13);\n                break;\n\n              case 117:\n                chars.push(readu4());\n                break;\n\n              default:\n                throw new Error(\"\".concat(decodeErrPrefix, \" unexpected string escape character at position \").concat(this.pos));\n            }\n\n            break;\n\n          case 34:\n            this.pos++;\n            return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n\n          default:\n            if (_ch2 < 32) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" invalid control character at position \").concat(this.pos));\n            } else if (_ch2 < 128) {\n              chars.push(_ch2);\n              this.pos++;\n            } else {\n              readUtf8Char();\n            }\n\n        }\n      }\n\n      throw new Error(\"\".concat(decodeErrPrefix, \" unexpected end of string at position \").concat(this.pos));\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue() {\n      switch (this.ch()) {\n        case 123:\n          this.modeStack.push('obj-start');\n          this.pos++;\n          return new Token(Type.map, Infinity, 1);\n\n        case 91:\n          this.modeStack.push('array-start');\n          this.pos++;\n          return new Token(Type.array, Infinity, 1);\n\n        case 34:\n          {\n            return this.parseString();\n          }\n\n        case 110:\n          this.expect([110, 117, 108, 108]);\n          return new Token(Type.null, null, 4);\n\n        case 102:\n          this.expect([102, 97, 108, 115, 101]);\n          return new Token(Type.false, false, 5);\n\n        case 116:\n          this.expect([116, 114, 117, 101]);\n          return new Token(Type.true, true, 4);\n\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          return this.parseNumber();\n\n        default:\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos));\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.skipWhitespace();\n\n      switch (this.currentMode()) {\n        case 'value':\n          this.modeStack.pop();\n          return this.parseValue();\n\n        case 'array-value':\n          {\n            this.modeStack.pop();\n\n            if (this.ch() === 93) {\n              this.pos++;\n              this.skipWhitespace();\n              return new Token(Type.break, undefined, 1);\n            }\n\n            if (this.ch() !== 44) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \", was expecting array delimiter but found '\").concat(String.fromCharCode(this.ch()), \"'\"));\n            }\n\n            this.pos++;\n            this.modeStack.push('array-value');\n            this.skipWhitespace();\n            return this.parseValue();\n          }\n\n        case 'array-start':\n          {\n            this.modeStack.pop();\n\n            if (this.ch() === 93) {\n              this.pos++;\n              this.skipWhitespace();\n              return new Token(Type.break, undefined, 1);\n            }\n\n            this.modeStack.push('array-value');\n            this.skipWhitespace();\n            return this.parseValue();\n          }\n\n        case 'obj-key':\n          if (this.ch() === 125) {\n            this.modeStack.pop();\n            this.pos++;\n            this.skipWhitespace();\n            return new Token(Type.break, undefined, 1);\n          }\n\n          if (this.ch() !== 44) {\n            throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \", was expecting object delimiter but found '\").concat(String.fromCharCode(this.ch()), \"'\"));\n          }\n\n          this.pos++;\n          this.skipWhitespace();\n\n        case 'obj-start':\n          {\n            this.modeStack.pop();\n\n            if (this.ch() === 125) {\n              this.pos++;\n              this.skipWhitespace();\n              return new Token(Type.break, undefined, 1);\n            }\n\n            var token = this.parseString();\n            this.skipWhitespace();\n\n            if (this.ch() !== 58) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \", was expecting key/value delimiter ':' but found '\").concat(String.fromCharCode(this.ch()), \"'\"));\n            }\n\n            this.pos++;\n            this.modeStack.push('obj-value');\n            return token;\n          }\n\n        case 'obj-value':\n          {\n            this.modeStack.pop();\n            this.modeStack.push('obj-key');\n            this.skipWhitespace();\n            return this.parseValue();\n          }\n\n        default:\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected parse state at position \").concat(this.pos, \"; this shouldn't happen\"));\n      }\n    }\n  }]);\n\n  return Tokenizer;\n}();\n\nfunction decode(data, options) {\n  options = Object.assign({\n    tokenizer: new Tokenizer(data, options)\n  }, options);\n  return _decode(data, options);\n}\n\nexport { decode, Tokenizer };","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/cborg/esm/lib/json/decode.js"],"names":["decode","_decode","Token","Type","decodeCodePointsArray","decodeErrPrefix","Tokenizer","data","options","pos","modeStack","lastToken","length","c","ch","str","Error","i","String","fromCharCode","startPos","negative","float","swallow","chars","done","includes","uint","numStr","apply","subarray","num","parseFloat","allowBigInt","Number","isSafeInteger","negint","BigInt","l","string","readu4","u4","readUtf8Char","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","ch1","map","Infinity","array","parseString","expect","null","false","true","parseNumber","skipWhitespace","currentMode","pop","parseValue","break","undefined","token","Object","assign","tokenizer"],"mappings":"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","sourcesContent":["import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};"]},"metadata":{},"sourceType":"module"}
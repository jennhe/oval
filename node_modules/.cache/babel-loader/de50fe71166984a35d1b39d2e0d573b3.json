{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { createPut as createDagPut } from '../dag/put.js';\nexport var createPut = function createPut(codecs, options) {\n  var fn = configure(function (api) {\n    var dagPut = createDagPut(codecs, options);\n\n    function put(_x) {\n      return _put.apply(this, arguments);\n    }\n\n    function _put() {\n      _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(obj) {\n        var options,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                return _context.abrupt(\"return\", dagPut(obj, _objectSpread(_objectSpread({}, options), {}, {\n                  storeCodec: 'dag-pb',\n                  hashAlg: 'sha2-256',\n                  version: 1\n                })));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _put.apply(this, arguments);\n    }\n\n    return put;\n  });\n  return fn(options);\n};","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/object/put.js"],"names":["configure","createPut","createDagPut","codecs","options","fn","api","dagPut","put","obj","storeCodec","hashAlg","version"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,SAAS,IAAIC,YAAtB,QAA0C,eAA1C;AACA,OAAO,IAAMD,SAAS,GAAG,SAAZA,SAAY,CAACE,MAAD,EAASC,OAAT,EAAqB;AAC5C,MAAMC,EAAE,GAAGL,SAAS,CAAC,UAAAM,GAAG,EAAI;AAC1B,QAAMC,MAAM,GAAGL,YAAY,CAACC,MAAD,EAASC,OAAT,CAA3B;;AAD0B,aAEXI,GAFW;AAAA;AAAA;;AAAA;AAAA,sEAE1B,iBAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBL,gBAAAA,OAAxB,2DAAkC,EAAlC;AAAA,iDACSG,MAAM,CAACE,GAAD,kCACRL,OADQ;AAEXM,kBAAAA,UAAU,EAAE,QAFD;AAGXC,kBAAAA,OAAO,EAAE,UAHE;AAIXC,kBAAAA,OAAO,EAAE;AAJE,mBADf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAF0B;AAAA;AAAA;;AAU1B,WAAOJ,GAAP;AACD,GAXmB,CAApB;AAYA,SAAOH,EAAE,CAACD,OAAD,CAAT;AACD,CAdM","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { createPut as createDagPut } from '../dag/put.js';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const dagPut = createDagPut(codecs, options);\n    async function put(obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      });\n    }\n    return put;\n  });\n  return fn(options);\n};"]},"metadata":{},"sourceType":"module"}
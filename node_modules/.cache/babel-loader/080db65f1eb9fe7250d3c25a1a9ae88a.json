{"ast":null,"code":"import _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { from } from './hasher.js';\n\nvar sha = function sha(name) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = Uint8Array;\n              _context.next = 3;\n              return crypto.subtle.digest(name, data);\n\n            case 3:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport var sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport var sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/multiformats/esm/src/hashes/sha2-browser.js"],"names":["from","sha","name","data","Uint8Array","crypto","subtle","digest","sha256","code","encode","sha512"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,aAArB;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,IAAI;AAAA;AAAA,wEAAI,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAkBC,UAAlB;AAAA;AAAA,qBAAmCC,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqBL,IAArB,EAA2BC,IAA3B,CAAnC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AACA,OAAO,IAAMK,MAAM,GAAGR,IAAI,CAAC;AACzBE,EAAAA,IAAI,EAAE,UADmB;AAEzBO,EAAAA,IAAI,EAAE,EAFmB;AAGzBC,EAAAA,MAAM,EAAET,GAAG,CAAC,SAAD;AAHc,CAAD,CAAnB;AAKP,OAAO,IAAMU,MAAM,GAAGX,IAAI,CAAC;AACzBE,EAAAA,IAAI,EAAE,UADmB;AAEzBO,EAAAA,IAAI,EAAE,EAFmB;AAGzBC,EAAAA,MAAM,EAAET,GAAG,CAAC,SAAD;AAHc,CAAD,CAAnB","sourcesContent":["import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _wrapAsyncGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _asyncGeneratorDelegate from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\nexport var createRefs = configure(function (api, opts) {\n  var refs = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {\n      var options,\n          argsArr,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              argsArr = Array.isArray(args) ? args : [args];\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('refs', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: argsArr.map(function (arg) {\n                    return \"\".concat(arg instanceof Uint8Array ? CID.decode(arg) : arg);\n                  })\n                }, options)),\n                headers: options.headers,\n                transform: objectToCamel\n              }));\n\n            case 4:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator), \"t0\", 6);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function refs(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  });\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/refs/index.js"],"names":["CID","objectToCamel","configure","toUrlSearchParams","createLocal","createRefs","api","opts","refs","args","options","argsArr","Array","isArray","post","signal","searchParams","arg","map","Uint8Array","decode","headers","transform","res","ndjson","Object","assign","local"],"mappings":";;;;;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,IAAMC,UAAU,GAAGH,SAAS,CAAC,UAACI,GAAD,EAAMC,IAAN,EAAe;AACjD,MAAMC,IAAI;AAAA,0EAAG,iBAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,cAAAA,OAAvB,2DAAiC,EAAjC;AACLC,cAAAA,OADK,GACKC,KAAK,CAACC,OAAN,CAAcJ,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CADlC;AAAA;AAAA,0CAEOH,GAAG,CAACQ,IAAJ,CAAS,MAAT,EAAiB;AACjCC,gBAAAA,MAAM,EAAEL,OAAO,CAACK,MADiB;AAEjCC,gBAAAA,YAAY,EAAEb,iBAAiB;AAC7Bc,kBAAAA,GAAG,EAAEN,OAAO,CAACO,GAAR,CAAY,UAAAD,GAAG;AAAA,qCAAQA,GAAG,YAAYE,UAAf,GAA4BnB,GAAG,CAACoB,MAAJ,CAAWH,GAAX,CAA5B,GAA8CA,GAAtD;AAAA,mBAAf;AADwB,mBAE1BP,OAF0B,EAFE;AAMjCW,gBAAAA,OAAO,EAAEX,OAAO,CAACW,OANgB;AAOjCC,gBAAAA,SAAS,EAAErB;AAPsB,eAAjB,CAFP;;AAAA;AAELsB,cAAAA,GAFK;AAWX,mFAAOA,GAAG,CAACC,MAAJ,EAAP;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJhB,IAAI;AAAA;AAAA;AAAA,KAAV;;AAaA,SAAOiB,MAAM,CAACC,MAAP,CAAclB,IAAd,EAAoB;AAAEmB,IAAAA,KAAK,EAAEvB,WAAW,CAACG,IAAD;AAApB,GAApB,CAAP;AACD,CAfkC,CAA5B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\nexport const createRefs = configure((api, opts) => {\n  const refs = async function* (args, options = {}) {\n    const argsArr = Array.isArray(args) ? args : [args];\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${ arg instanceof Uint8Array ? CID.decode(arg) : arg }`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    });\n    yield* res.ndjson();\n  };\n  return Object.assign(refs, { local: createLocal(opts) });\n});"]},"metadata":{},"sourceType":"module"}
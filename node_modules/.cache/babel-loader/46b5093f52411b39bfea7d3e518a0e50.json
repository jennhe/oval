{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\nexport function createAdd(config) {\n  var all = createAddAll(config);\n  return configure(function () {\n    function add(_x) {\n      return _add.apply(this, arguments);\n    }\n\n    function _add() {\n      _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n        var options,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                return _context.abrupt(\"return\", last(all([_objectSpread({\n                  path: path\n                }, options)], options)));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _add.apply(this, arguments);\n    }\n\n    return add;\n  })(config);\n}","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/pin/add.js"],"names":["createAddAll","last","configure","createAdd","config","all","add","path","options"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAChC,MAAMC,GAAG,GAAGL,YAAY,CAACI,MAAD,CAAxB;AACA,SAAOF,SAAS,CAAC,YAAM;AAAA,aACNI,GADM;AAAA;AAAA;;AAAA;AAAA,sEACrB,iBAAmBC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBC,gBAAAA,OAAzB,2DAAmC,EAAnC;AAAA,iDACSP,IAAI,CAACI,GAAG,CAAC;AACZE,kBAAAA,IAAI,EAAJA;AADY,mBAETC,OAFS,EAAD,EAGTA,OAHS,CAAJ,CADb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA;AAAA;;AAOrB,WAAOF,GAAP;AACD,GARe,CAAT,CAQJF,MARI,CAAP;AASD","sourcesContent":["import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\nexport function createAdd(config) {\n  const all = createAddAll(config);\n  return configure(() => {\n    async function add(path, options = {}) {\n      return last(all([{\n          path,\n          ...options\n        }], options));\n    }\n    return add;\n  })(config);\n}"]},"metadata":{},"sourceType":"module"}
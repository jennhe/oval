{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/oval/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport var createGet = configure(function (api) {\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('block/get', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.toString()\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.t0 = Uint8Array;\n              _context.next = 7;\n              return res.arrayBuffer();\n\n            case 7:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _get.apply(this, arguments);\n  }\n\n  return get;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/oval/node_modules/ipfs-http-client/esm/src/block/get.js"],"names":["configure","toUrlSearchParams","createGet","api","get","cid","options","post","signal","searchParams","arg","toString","headers","res","Uint8Array","arrayBuffer"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;AAAA,WACzBC,GADyB;AAAA;AAAA;;AAAA;AAAA,oEACxC,iBAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,OAAxB,2DAAkC,EAAlC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,WAAT,EAAsB;AACtCC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADsB;AAEtCC,gBAAAA,YAAY,EAAER,iBAAiB;AAC7BS,kBAAAA,GAAG,EAAEL,GAAG,CAACM,QAAJ;AADwB,mBAE1BL,OAF0B,EAFO;AAMtCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AANqB,eAAtB,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA,4BASaC,UATb;AAAA;AAAA,qBAS8BD,GAAG,CAACE,WAAJ,EAT9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwC;AAAA;AAAA;;AAYxC,SAAOX,GAAP;AACD,CAbiC,CAA3B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return new Uint8Array(await res.arrayBuffer());\n  }\n  return get;\n});"]},"metadata":{},"sourceType":"module"}
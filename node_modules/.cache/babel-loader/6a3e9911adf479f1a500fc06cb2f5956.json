{"ast":null,"code":"import _objectSpread from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/@babel/runtime/regenerator/index.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport HTTP from 'ipfs-utils/src/http.js';\nexport var createRm = configure(function (api) {\n  function rm(_x) {\n    return _rm.apply(this, arguments);\n  }\n\n  function _rm() {\n    _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          body,\n          error,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('files/rm', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: path\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.text();\n\n            case 6:\n              body = _context.sent;\n\n              if (!(body !== '')) {\n                _context.next = 11;\n                break;\n              }\n\n              error = new HTTP.HTTPError(res);\n              error.message = body;\n              throw error;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n});","map":{"version":3,"sources":["/Users/jenniferhe/Documents/GitHub/2022-Chia1/webapp/node_modules/ipfs-http-client/esm/src/files/rm.js"],"names":["configure","toUrlSearchParams","HTTP","createRm","api","rm","path","options","post","signal","searchParams","arg","headers","res","text","body","error","HTTPError","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,IAAMC,QAAQ,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAAA,WACxBC,EADwB;AAAA;AAAA;;AAAA;AAAA,mEACvC,iBAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,OAAxB,2DAAkC,EAAlC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,UAAT,EAAqB;AACrCC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADqB;AAErCC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,EAAEL;AADwB,mBAE1BC,OAF0B,EAFM;AAMrCK,gBAAAA,OAAO,EAAEL,OAAO,CAACK;AANoB,eAArB,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBASqBA,GAAG,CAACC,IAAJ,EATrB;;AAAA;AASQC,cAAAA,IATR;;AAAA,oBAUMA,IAAI,KAAK,EAVf;AAAA;AAAA;AAAA;;AAWUC,cAAAA,KAXV,GAWkB,IAAId,IAAI,CAACe,SAAT,CAAmBJ,GAAnB,CAXlB;AAYIG,cAAAA,KAAK,CAACE,OAAN,GAAgBH,IAAhB;AAZJ,oBAaUC,KAbV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADuC;AAAA;AAAA;;AAiBvC,SAAOX,EAAP;AACD,CAlBgC,CAA1B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport HTTP from 'ipfs-utils/src/http.js';\nexport const createRm = configure(api => {\n  async function rm(path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const body = await res.text();\n    if (body !== '') {\n      const error = new HTTP.HTTPError(res);\n      error.message = body;\n      throw error;\n    }\n  }\n  return rm;\n});"]},"metadata":{},"sourceType":"module"}